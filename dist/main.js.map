{"version":3,"file":"main.js","mappings":"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","sources":["webpack://myjsp/./src/scripts/player.js","webpack://myjsp/./src/scripts/platforms.js","webpack://myjsp/./src/scripts/layers.js","webpack://myjsp/./src/scripts/blackHole.js","webpack://myjsp/./src/index.js","webpack://myjsp/./src/scripts/game.js"],"sourcesContent":["class Player {\n    constructor(game, ctx, CANVAS_WIDTH, CANVAS_HEIGHT){\n        this.gameframe = 0\n        this.ctx = ctx\n        this.CANVAS_WIDTH = CANVAS_WIDTH\n        this.CANVAS_HEIGHT = CANVAS_HEIGHT\n        this.spriteWidth = 50\n        this.spriteHeight = 38\n        this.game = game;\n        //player height\n        this.width = 125;\n        this.height = 125\n        this.position = {\n            x: 100,\n            y: 375\n        }\n        this.velocity = {\n            x: 0,\n            y: 0\n        }\n        this.gravity = 2\n        this.image = document.getElementById('player')\n        this.speed = 0\n        this.maxSpeed = 10;\n    }\n    update(input){\n        this.draw()\n        this.position.y += this.velocity.y\n        this.position.x += this.velocity.x\n        // console.log(this.position.x)\n        if (this.position.y + this.height + this.velocity.y <= this.CANVAS_HEIGHT){\n            this.velocity.y += this.gravity\n        }\n    }\n    draw(context){\n        const playerState = 'run'\n        //changes sprite frame\n        const staggerFrames = 7;\n        const spriteAnimations = [];\n        const animationStates = [\n            {\n                name: 'idle',\n                frames: 7,\n            },\n            {\n                name: 'run',\n                frames: 7,\n            },\n            {\n                name: 'jump',\n                frames: 7,\n            },   {\n                name: 'fall',\n                frames: 7,\n            },\n            {\n                name: 'standup',\n                frames: 7,\n            },\n            {\n                name: 'sword',\n                frames: 7,\n            },\n            {\n                name: 'slash',\n                frames: 7,\n            },\n            {\n                name: 'slashMoveRight',\n                frames: 7,\n            },\n            {\n                name: 'prepareAttack',\n                frames: 7,\n            },\n            {\n                name: 'hit',\n                frames: 7,\n            },\n            {\n                name: 'dash',\n                frames: 2,\n            }\n        ];\n        animationStates.forEach((state, index)=>{\n            let frames = {\n                loc: [],\n            }\n            for (let j = 0; j < state.frames; j++){\n                let positionX = j * this.spriteWidth\n                let positionY = index * this.spriteHeight\n                frames.loc.push({x: positionX, y: positionY})\n            }\n            spriteAnimations[state.name] = frames;\n        })\n        const playerImage = new Image();\n        playerImage.src = './images/adventurer-Sheet.png'\n        const blackholeImg = new Image()\n        blackholeImg.src = './images/blackHole.png'\n        let position = Math.floor(this.gameframe / staggerFrames) % spriteAnimations[playerState].loc.length\n        let frameX = this.spriteWidth * position\n        let frameY = spriteAnimations[playerState].loc[position].y\n        // this.ctx.drawImage(blackholeImg, frameX, frameY, this.spriteWidth, this.spriteHeight, this.position.x, this.position.y, this.width, this.height)\n        this.ctx.drawImage(playerImage, frameX, frameY, this.spriteWidth, this.spriteHeight, this.position.x, this.position.y, this.width, this.height)\n        this.gameframe++;\n    }\n\n    onGround(){\n        return this.y >= this.game.height - this.height\n    }\n}\n\nexport default Player\n","class Platform{\n    constructor({x, y}, ctx){\n        this.ctx = ctx\n        this.plateformImage = new Image()\n        this.plateformImage.src = './images/background.png'\n\n        this.position = {\n            x,\n            y\n        }\n        this.width = 250\n        this.height = 150\n    }\n    draw(){\n        this.ctx.drawImage(this.plateformImage, this.position.x, this.position.y, this.width, this.height)\n    }\n    update(){\n        this.ctx.draw()\n        this.ctx.update()\n    }\n}\nexport default Platform\n","class Layer{\n    constructor(image, speedModifier, gameSpeed, ctx){\n        this.ctx = ctx\n        this.gameSpeed = gameSpeed\n        this.x = 0;\n        this.y = 0;\n        this.width = 600;\n        this.height = 600;\n        this.x2 = this.width;\n        this.image = image\n        this.speedModifier = speedModifier\n        this.speed = this.gameSpeed * this.speedModifier;\n    }\n    update(){\n        this.speed = this.gameSpeed * this.speedModifier\n        if (this.x <= -this.width){\n            this.x = this.width + this.x2 - this.speed\n        }\n        if (this.x2 <= -this.width){\n            this.x2 = this.width + this.x - this.speed\n        }\n        this.x = Math.floor(this.x - this.speed);\n        this.x2 = Math.floor(this.x2 - this.speed);\n    }\n    draw(){\n        this.ctx.drawImage(this.image, this.x, this.y, this.width, this.height)\n        this.ctx.drawImage(this.image, this.x2, this.y, this.width, this.height)\n    }\n}\n\n\nexport default Layer\n","class blackHole {\n    constructor(ctx, CANVAS_WIDTH, CANVAS_HEIGHT){\n        this.gameframe = 0\n        this.ctx = ctx\n        this.CANVAS_WIDTH = CANVAS_WIDTH\n        this.CANVAS_HEIGHT = CANVAS_HEIGHT\n        this.spriteWidth = 150\n        this.spriteHeight = 150\n        //player height\n        this.width = 525;\n        this.height = 725\n        this.position = {\n            x: -500,\n            y: -150\n        }\n        this.velocity = {\n            x: 0,\n            y: 0\n        }\n        this.gravity = 2\n        this.speed = 0\n        this.maxSpeed = 10;\n    }\n    update(input){\n        this.draw()\n        this.position.x += 1\n    }\n    draw(context){\n        const playerState = 'run'\n        //changes sprite frame\n        const staggerFrames = 4;\n        const spriteAnimations = [];\n        const animationStates = [\n            {\n                name: 'idle',\n                frames: 7,\n            },\n            {\n                name: 'run',\n                frames: 2,\n            },\n            {\n                name: 'jump',\n                frames: 7,\n            },   {\n                name: 'fall',\n                frames: 7,\n            },\n            {\n                name: 'standup',\n                frames: 7,\n            },\n            {\n                name: 'sword',\n                frames: 7,\n            },\n            {\n                name: 'slash',\n                frames: 7,\n            },\n            {\n                name: 'slashMoveRight',\n                frames: 7,\n            },\n            {\n                name: 'prepareAttack',\n                frames: 7,\n            },\n            {\n                name: 'hit',\n                frames: 7,\n            },\n            {\n                name: 'dash',\n                frames: 2,\n            }\n        ];\n        animationStates.forEach((state, index)=>{\n            let frames = {\n                loc: [],\n            }\n            for (let j = 0; j < state.frames; j++){\n                let positionX = j * this.spriteWidth\n                let positionY = index * this.spriteHeight\n                frames.loc.push({x: positionX, y: positionY})\n            }\n            spriteAnimations[state.name] = frames;\n        })\n        const blackholeImg = new Image()\n        blackholeImg.src = './images/blackHole.png'\n        let position = Math.floor(this.gameframe / staggerFrames) % spriteAnimations[playerState].loc.length\n        let frameX = this.spriteWidth * position\n        let frameY = spriteAnimations[playerState].loc[position].y\n        this.ctx.drawImage(blackholeImg, frameX, frameY, this.spriteWidth, this.spriteHeight, this.position.x, this.position.y, this.width, this.height)\n        this.gameframe++;\n    }\n    onGround(){\n        return this.y >= this.game.height - this.height\n    }\n}\n\nexport default blackHole\n\nconst enemy = new blackHole();\n","import Game from './scripts/game'\n\ndocument.addEventListener('DOMContentLoaded', () =>{\n    const canvas = document.querySelector('canvas')\n    const ctx = canvas.getContext('2d')\n    const CANVAS_WIDTH = canvas.width = 600\n    const CANVAS_HEIGHT = canvas.width = 600\n    const hud = document.getElementById('hud')\n    const play = document.getElementById('start')\n    const end = document.getElementById('endGame')\n    const gcontrols = document.getElementById('gravity')\n    const score = document.getElementById('output')\n    // const win = document.getElementById('win')\n    const playSong = document.getElementById('play')\n    const pauseSong = document.getElementById('pause')\n    let music = new Audio()\n    music.src = './src/audio/2.mp3'\n    music.volume = 0.08\n    playSong.addEventListener('click', ()=>{\n        music.play()\n    })\n    pauseSong.addEventListener('click', ()=>{\n        music.pause()\n    })\n    // music.play()\n    play.addEventListener('click', () => {\n        canvas.classList.remove('hidden')\n        // canvas.classList.add('hidden')\n        const game = new Game(ctx, CANVAS_WIDTH, CANVAS_HEIGHT)\n        play.classList.add('hidden')\n        hud.classList.add('hidden')\n        gcontrols.classList.remove('hidden')\n    })\n    end.addEventListener('click', () => {\n        canvas.classList.add('hidden')\n        play.classList.remove('hidden')\n        hud.classList.remove('hidden')\n        score.classList.add('hidden')\n        gcontrols.classList.add('hidden')\n        // win.classList.add('hidden')\n    })\n})\n\n//game over reset, you win or lose\n","import Player from './player'\nimport Platform from './platforms'\nimport Layer from './layers'\nimport blackHole from './blackHole.js'\n\nclass Game{\n    constructor(ctx, CANVAS_WIDTH, CANVAS_HEIGHT){\n        this.CANVAS_WIDTH = CANVAS_WIDTH\n        this.CANVAS_HEIGHT = CANVAS_HEIGHT\n        this.scrollOffset = 0\n        this.ctx = ctx\n        this.player = new Player(this, ctx, CANVAS_WIDTH, CANVAS_HEIGHT)\n        this.blackHole = new blackHole(ctx, CANVAS_WIDTH, CANVAS_HEIGHT)\n        this.score = 0\n        this.gameSpeed = 5\n        this.backgroundlayer1 = new Image();//same as getElementByImage()\n        this.backgroundlayer1.src = './images/lava.jpg'\n        this.backgroundlayer2 = new Image();\n        this.backgroundlayer2.src = './images/7/4.png'\n        this.backgroundlayer3 = new Image();\n        this.backgroundlayer3.src = './images/7/2.png'\n        this.backgroundlayer4 = new Image();\n        this.backgroundlayer4.src = './images/7/3.png'\n        this.platforms = [\n            new Platform({\n                x:0, y: 500\n            }, this.ctx),\n            new Platform({\n                x:0, y: -31\n            }, this.ctx)\n            , new Platform({\n                x: 200, y: 500\n            },this.ctx),\n            new Platform({\n                x: 500, y: 350\n            },this.ctx)\n            , new Platform({\n                x: 800, y: -31\n            },this.ctx)\n            , new Platform({\n                x: 1000, y: -31\n            },this.ctx)\n            , new Platform({\n                x: 1500, y: -31 //dce\n            },this.ctx)\n            , new Platform({\n                x: 1500, y: 500\n            },this.ctx)\n            , new Platform({\n                x: 1300, y: 500\n            },this.ctx)\n            , new Platform({\n                x: 1800, y: 350//odd one\n            },this.ctx), //new\n            new Platform({\n                x:2150, y: 500\n            }, this.ctx),\n            new Platform({\n                x:2150, y: -31\n            }, this.ctx)\n            , new Platform({\n                x: 2400, y: -31\n            },this.ctx),\n            new Platform({\n                x: 2500, y: 350\n            },this.ctx),\n            new Platform({\n                x: 2500, y: -31\n            },this.ctx)\n            , new Platform({\n                x: 2600, y: -31\n            },this.ctx)\n            , new Platform({\n                x: 2800, y: 500//last\n            },this.ctx)\n            , new Platform({\n                x: 3000, y: 500//last\n            },this.ctx)\n            , new Platform({\n                x: 2500, y: -31\n            },this.ctx)\n            , new Platform({\n                x: 2500, y: 500\n            },this.ctx)\n            , new Platform({\n                x: 2300, y: 500\n            },this.ctx)\n            , new Platform({\n                x: 2500, y: 350\n            },this.ctx)\n        ]\n        this.keys = {\n            right: {\n                pressed: false\n            },\n            left: {\n                pressed: false\n            },\n            space: {\n                pressed: false\n            }\n        }\n        this.animate = this.animate.bind(this)\n        this.animate()\n        this.bindKeys()\n    }\n\n    bindKeys(){\n        //keyCode is the number that you get when you press a key in the console\n        window.addEventListener(\"keydown\", ({keyCode}) => {\n            console.log(keyCode)\n            switch(keyCode) {\n                case 68:\n                    console.log(\"right\")\n                    this.player.velocity.x = 1\n                    this.keys.right.pressed = true\n                    break\n                case 65:\n                    console.log(\"left\")\n                    this.keys.left.pressed = true\n                    this.player.velocity.x = -1\n                    break\n                case 87:\n                    console.log(\"up\")\n                    this.player.velocity.y -= 20\n                    break\n                case 83:\n                    console.log(\"down\")\n                    this.player.velocity.y += 20\n                    break\n                case 32:\n                    console.log(\"space\")\n                    this.keys.space.pressed = true\n                    this.player.velocity.y = -20\n                    break\n            }\n            console.log(this.keys.right.pressed)\n        })\n        window.addEventListener(\"keyup\", ({keyCode}) => {\n            // console.log(keyCode)\n            switch(keyCode) {\n                case 68:\n                    console.log(\"right\")\n                    this.keys.right.pressed = false\n                    this.player.velocity.x = 0\n                    break\n                case 65:\n                    console.log(\"left\")\n                    this.keys.left.pressed = false\n                    this.player.velocity.x = 0\n                    break\n                case 87:\n                    console.log(\"up\")\n                    this.player.velocity.y -= 20\n                    break\n                case 83:\n                    console.log(\"down\")\n                    this.player.velocity.y += 20\n                    break\n                case 32:\n                    console.log(\"space\")\n                    this.keys.space.pressed = false\n                    this.player.gravity = 0\n                    break\n            }\n            console.log(this.keys.right.pressed)\n        })\n\n    }\n    reset(){\n            [this.player.position.x, this.player.position.y] = [100, 320]\n                this.platforms = [\n                    new Platform({\n                        x:0, y: 500\n                    }, this.ctx),\n                    new Platform({\n                        x:0, y: -31\n                    }, this.ctx)\n                    , new Platform({\n                        x: 200, y: 500\n                    },this.ctx),\n                    new Platform({\n                        x: 500, y: 350\n                    },this.ctx)\n                    , new Platform({\n                        x: 800, y: -31\n                    },this.ctx)\n                    , new Platform({\n                        x: 1000, y: -31\n                    },this.ctx)\n                    , new Platform({\n                        x: 1500, y: -31 //dce\n                    },this.ctx)\n                    , new Platform({\n                        x: 1500, y: 500\n                    },this.ctx)\n                    , new Platform({\n                        x: 1300, y: 500\n                    },this.ctx)\n                    , new Platform({\n                        x: 1800, y: 350\n                    },this.ctx), //new\n                    new Platform({\n                        x:2150, y: 500\n                    }, this.ctx),\n                    new Platform({\n                        x:2150, y: -31\n                    }, this.ctx)\n                    , new Platform({\n                        x: 2400, y: -31\n                    },this.ctx),\n                    new Platform({\n                        x: 2500, y: 350\n                    },this.ctx),\n                    new Platform({\n                        x: 2500, y: -31\n                    },this.ctx)\n                    , new Platform({\n                        x: 2600, y: -31\n                    },this.ctx)\n                    , new Platform({\n                        x: 2800, y: 500\n                    },this.ctx)\n                    , new Platform({\n                        x: 3000, y: 500\n                    },this.ctx)\n                    , new Platform({\n                        x: 2500, y: -31 //dce\n                    },this.ctx)\n                    , new Platform({\n                        x: 2500, y: 500\n                    },this.ctx)\n                    , new Platform({\n                        x: 2300, y: 500\n                    },this.ctx)\n                    , new Platform({\n                        x: 2500, y: 350\n                    },this.ctx)\n                ]\n            this.blackHole.position.x = -500\n            this.scrollOffset = 0\n        }\n\n    animate() {\n    this.ctx.clearRect(0, 0, this.CANVAS_HEIGHT, this.CANVAS_WIDTH)\n    const layer1 = new Layer(this.backgroundlayer1, 1, this.gameSpeed, this.ctx)\n    const layer2 = new Layer(this.backgroundlayer2, 1, this.gameSpeed, this.ctx)\n    const layer3 = new Layer(this.backgroundlayer3, 1, this.gameSpeed, this.ctx)\n    const layer4 = new Layer(this.backgroundlayer4, 1, this.gameSpeed, this.ctx)\n    layer1.update();\n    layer1.draw();\n    layer2.update();\n    layer2.draw();\n    layer3.update();\n    layer3.draw();\n    layer4.update();\n    layer4.draw();\n    this.platforms.forEach(platform => {\n        platform.draw()\n    })\n    if (this.player.position.y >= 600){\n        this.reset()\n    }\n    this.blackHole.update()\n    this.player.update()\n    const gameRun = requestAnimationFrame(this.animate);\n\n    //makes platforms scroll\n    if (this.keys.right.pressed && this.player.position.x < 100){\n        this.player.velocity.x = 5\n    }else if(this.keys.left.pressed && this.player.position.x > 100){\n        this.player.velocity.x = -5\n    }else if (this.keys.space.pressed && this.player.position.x > 100){\n        this.player.velocity.y += 10\n    }else{\n        this.player.velocity.x = 0\n        if (this.keys.right.pressed){\n            this.scrollOffset += 5\n            this.platforms.forEach(platform => {\n                platform.position.x -= 5\n            })\n            this.blackHole.position.x -= 5\n        } else if (this.keys.left.pressed){\n            this.scrollOffset -= 5\n            this.platforms.forEach(platform => {\n                platform.position.x += 5\n            })\n            this.blackHole.position.x += 5\n        } else if (this.keys.right.pressed){\n            //makes this.platforms scroll\n            this.scrollOffset += 5\n            this.platforms.forEach(platform => {\n                platform.position.x -= 5\n            })\n            this.blackHole.position.x -= 5\n        }\n    }\n\n    const mid = (this.blackHole.width / 2) + this.blackHole.position.x\n    if (this.player.position.x <= mid){\n        console.log('black hole gotcha')\n        this.reset()\n    }\n\n\n    // platform collision detecion\n    this.platforms.forEach(platform => {\n        if (this.player.position.x <= platform.position.x + (platform.width - 45) &&\n            this.player.position.x + this.player.width >= platform.position.x &&\n            this.player.position.y < platform.position.y + platform.height &&\n            this.player.position.y + this.player.height >= platform.position.y) {\n             // collision detected!\n             this.player.velocity.y = 0\n             this.player.velocity.x = 0\n        }\n    })\n    //win condition\n    if (this.scrollOffset >= 3100){\n        this.score = this.scrollOffset\n        let winLabel = document.getElementById('win')\n        winLabel.style.display = 'block'\n        cancelAnimationFrame(gameRun)\n    }\n    // lose condition\n    // if (this.player.position.y > this.CANVAS_HEIGHT || this.player.position.x <= mid){\n    //     document.getElementById('endGame').innerHTML = this.endGame\n    //     console.log('you lose')\n    //     //implement if blackhole gets player, or player falls of canvas\n    // }\n    if (this.scrollOffset >= 0){\n        this.score = this.scrollOffset\n        document.getElementById('output').innerHTML=this.score\n    }else{\n        this.score = 0\n    }\n}\n}\n\nexport default Game\n"],"names":["constructor","ctx","x","y","this","plateformImage","Image","src","position","width","height","draw","drawImage","update","image","speedModifier","gameSpeed","x2","speed","Math","floor","blackHole","CANVAS_WIDTH","CANVAS_HEIGHT","gameframe","spriteWidth","spriteHeight","velocity","gravity","maxSpeed","input","context","spriteAnimations","name","frames","forEach","state","index","loc","j","positionX","positionY","push","blackholeImg","length","frameX","frameY","onGround","game","document","addEventListener","canvas","querySelector","getContext","hud","getElementById","play","end","gcontrols","score","playSong","pauseSong","music","Audio","volume","pause","classList","remove","scrollOffset","player","playerImage","backgroundlayer1","backgroundlayer2","backgroundlayer3","backgroundlayer4","platforms","Platform","keys","right","pressed","left","space","animate","bind","bindKeys","window","keyCode","console","log","reset","clearRect","layer1","Layer","layer2","layer3","layer4","platform","gameRun","requestAnimationFrame","mid","style","display","cancelAnimationFrame","innerHTML","add"],"sourceRoot":""}